# -*- coding: utf-8 -*-
"""M Putra Harifin P_UTS_PDS2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1c5keI9AKXrXlSsGiJqZ93UcUs_0ra-vd

# UTS - Laboratorium PDS
Disini, kalian akan diuji dalam kemampuan kalian menjelaskan tipe dataset yang kalian miliki, melakukan visualisasi, dan memeriksa distribusi data.

Nama : (Muhammad Putra Harifin pane)

NIM : (221401072)

## Import Library
Panggil Library yang kalian butuhkan disini.
"""

# Panggil Library
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as sp
import statsmodels.api as sm

"""## Load Dataset
Masukkan dataset kalian kedalam program disini.
"""

# Panggil Dataset kedalam program
from google.colab import files
uploaded = files.upload()

#gunakan perintah dibawah untuk mengecek tampilan dataframe

df = pd.read_csv('drug200.csv')
df

"""## Kenali Dataset
Disini, jelaskan tipe data tiap kolom pada dataset, dan jelaskan apakah tiap kolom itu merupakan variabel kategorikal atau numerikal.

Jangan lupa terangkan jenis kategorikal (nominal, ordinal) atau numerikal (interval, rasio) apakah mereka!

Lalu, sebutkan kolom mana yang merupakan variabel independen dan dependen!
"""

# Cek Data tiap kolom, sudah diterangkan di colab modul 2
df.info()

#mengganti tipe data drug menjadi string
df["Drug"]= df["Drug"].astype("string")
df.info()

"""pada kolom Age tipe variabel sudah benar yaitu integer karena  umur biasanya memakai variabel integer.

pada kolom Na_to_K tipe variabel sudah benar memakai float karena isi nya merupakan rasio antara natrium dan kalium memakai koma/desimal sehingga tipe data yang sesuai adalah tipe data float

pada kolom Drug tipe data yang semula object saya ganti menjadi string karena berisi kata kata
"""

df.Drug.unique()        # target

df.dtypes

"""**tipe data pada setip kolom**

Age merupakan tipe data kuantitatif karena menggambarkan nilai dari suatu objek, numerikal , dan termasuk rasio (karena memiliki nol mutlak)

Na_to_K merupakaan tipe data kuantitatif, numerikal, dan rasio karena merupakan perbandingan antara garam dengan kalium

Drug merupakan tipe data kualitatif, kategorikal, nominal

Dari dataframe yang diberikan, terdapat 3 kolom yaitu "Age", "Na_to_K", dan "Drug".

Kolom "Age" dan "Na_to_K" merupakan variabel independen, karena nilai-nilai pada kedua kolom tersebut digunakan untuk memprediksi nilai pada variabel dependen (yaitu kolom "Drug").

Sementara itu, kolom "Drug" merupakan variabel dependen, karena nilai-nilai pada kolom tersebut bergantung pada nilai-nilai pada kolom "Age" dan "Na_to_K".
"""

df.describe(include='all')
#untuk mengecok apakah ada data yang hilang dalam data set
#untuk mengecek nilai apakah ada yang negatif atau tidak, ternyata tidak ada

df.isna().sum()

"""## Visualisasi
Disini, buat setidaknya 2 visualisasi tentang data kalian!
( Sudah diterangkan di colab modul 3 )
"""

# Visualisasi 1
continuous = ['Age' , 'Na_to_K']

i = 0
while i < 2 :

    fig = plt.figure (figsize = (10 , 7))

    sns.boxplot(x = continuous[i] , data = df)
    i += 1

    plt.show()

"""Keterangan Visualisasi 1: range umur antara 30 sampai 60. sedangkan rasio Na_to_K antara 10 sampai 20"""

sns.boxplot(data=df,x="Drug",y="Na_to_K")

sns.boxplot(data=df,x="Drug",y="Age")

# Visualisasi 2
# countplot for categorical columns

categorical = ['Drug']

i = 0
while i < 1 :

    fig = plt.figure(figsize = (15 , 7))

    plt.subplot(1,2,1)
    sns.countplot(x=categorical[i] , data = df)
    i += 1


    plt.show()

df['Drug'].value_counts().plot(kind="pie", autopct = '%0.0f%%')

"""Keterangan Visualisasi 2:DrugY mendapat respon/jumlah  yang paling banyak daripada yang lain

## Distribusi Data
Terakhir, gunakan library untuk memeriksa distribusi tiap kolom dataset kalian. Cek apakah mereka normal, t, chi, f, atau justru tidak ada dari keempat tersebut yang sesuai? (Sudah diterangkan di colab modul 4)

**INGAT ! HANYA DATA KONTINU YANG MEMILIKI DISTRIBUSI-DISTRIBUSI TERSEBUT. JIKA TIDAK ADA DATA KONTINU, BUAT KESIMPULAN "KOLOM X BUKAN DATA KONTINU".**
"""

# Cek distribusi kolom pertama
sns.displot(data = df, x = 'Age', kde = True)
plt.title('distribusi kolom age')
plt.show()

# kita buat terlebih dahulu untuk nilai x
fig = sm.qqplot(df['Age'])
plt.show()

sp.probplot(df['Age'], plot = plt)
plt.show()

pVals = pd.DataFrame(index = ['Statistical Value/Score', 'p-Value'])
pVals['Omnibus'] = sp.normaltest(df['Age'])
# Shapiro-Wilk test
pVals['Shapiro-Wilk'] = sp.shapiro(df['Age'])
#Kolmogorov-Smirnov

pVals['Kolmogorov-Smirnov'] = sp.kstest((df['Age']-
np.mean(df['Age']))/np.std(df['Age'],ddof=1), 'norm')

pVals

pip install fitter

from fitter import Fitter
f = Fitter(df['Age'], distributions = ['norm','chi','f','t'])
f.fit()
f.summary()

# Cek distribusi kolom kedua
from fitter import Fitter
f = Fitter(df['Na_to_K'], distributions = ['norm','chi','f','t'])
f.fit()
f.summary()

#Kolmogorov-Smirnov

pVals['Kolmogorov-Smirnov'] = sp.kstest((df['Na_to_K']-
np.mean(df['Na_to_K']))/np.std(df['Na_to_K'],ddof=1), 'norm')

pVals

# Cek distribusi kolom ketiga (kalau ada)
#kolom Drug merupakan data diskrit

"""Kesimpulan :
kolom Age : Dari nilai statistik Kolmogorov-Smirnov, dapat disimpulkan bahwa data yang diuji terdistribusi normal (p-value > 0.05). Setelah di uji dengan Fitter keempat pvalue diatas 0.05 yang berarti kolom age terdistribusi normal.

kolom Na_to_k : setelah menguji dengan tes KS(kolmogrov) ternyata p-value < 0,05 sehingga tidak ada distrusi yang cocok atau tidak terdistribusi secara normal

kolom Drug : tidak bisa di distribusikan karena kolom Drug berisi data diskrit
"""